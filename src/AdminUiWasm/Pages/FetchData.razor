@page "/fetchdata"

@inject HttpClient Http

@inject CatalogApi.catalog_apiClient client

@inject NavigationManager NavigationManager

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (catalogTypes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Type</th>
                <th><button type="submit" class="btn btn-primary" @onclick="CreateType">Create</button></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var type in catalogTypes)
            {
                <tr>
                    <td>@type.Id</td>
                    <td>@type.Type</td>
                    <td><button id="@type.Id" type="submit" class="btn btn-primary" @onclick="UpdateType">Update</button></td>
                    <td><button type="submit" class="btn btn-primary" @onclick="()=>DeleteType(type.Id)">Delete</button></td>
                    <br />

                    <table>
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Item</th>
                                <th>Description</th>
                                <th>Price</th>
                                <th><button type="submit" class="btn btn-primary" @onclick="CreateItem">Create</button></th>
                                
                            </tr>
                        </thead>
                        <tbody>
                            @if (catalogItems == null)
                            {
                                <p><em>Loading...</em></p>
                            }
                            else
                            {
                                @foreach (var item in catalogItems)
                                {
                                    if (item.CatalogTypeId == type.Id)
                                    {
                                        <tr>
                                            <td>@item.Id</td>
                                            <td>@item.Name</td>
                                            <td>@item.Description</td>
                                            <t>@item.Price</t>>
                                            <td><button value="@item.Id" type="submit" class="btn btn-primary" @onclick="()=>UpdateItem(item.Id)">Update</button></td>
                                            <td><button value="@item.Id" type="submit" class="btn btn-primary" @onclick="()=>DeleteItem(item.Id)">Delete</button></td>
                                        </tr>
                                        <br />
                                    }
                                }
                            }
                        </tbody>
                    </table>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    CatalogApi.CatalogType type;
    CatalogApi.CatalogItem item;

    private IEnumerable<CatalogApi.CatalogType> catalogTypes;
    private IEnumerable<CatalogApi.CatalogItem> catalogItems;

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public int DeleteId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        catalogTypes = await client.GetAllCatalogTypesAsync();
        catalogItems = await client.GetAllCatalogItemsAsync();
    }

    private void CreateType()
    {
        NavigationManager.NavigateTo("/CreateTypeItem");
    }

    private async Task UpdateType()
    {
        int Id = type.Id;
        NavigationManager.NavigateTo($"/UpdateType{Id}");
    }

    private async Task DeleteType(int id)
    {
        type = await client.GetCatalogTypeByIdAsync(id);
        NavigationManager.NavigateTo($"/DeleteType/{type.Id}");
    }

    private void CreateItem()
    {
        NavigationManager.NavigateTo("/CreateTypeItem");
    }

    private async Task UpdateItem(int id)
    {
        item = await client.GetCatalogItemByIdAsync(id);
        NavigationManager.NavigateTo($"/UpdateItem/{item.Id}");
    }

    private async Task DeleteItem(int id)
    {
        item = await client.GetCatalogItemByIdAsync(id);
        NavigationManager.NavigateTo($"/DeleteItem/{item.Id}");
    }
}
